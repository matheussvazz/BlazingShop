@page "/products/create"
@inject AppDbContext _context

<h1>New Product</h1>

<EditForm Model="_model" OnInvalidSubmit="@HandleSubmitAsync">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class "mb-3">
        <label for="Title" class="form-label">Title</label>
        <InputText class="form-control" type="text" id="Title" @bind-Value="model.Title" />
    </div>

    <div class="mb-3">
        <label for="Price" class="form-label">Price</label>
        <InputNumber class="form-control" type="number" id="Price" @bind-Value="model.Price" />
    </div>

    <div class="mb-3">
        <label for="CategoryId" class="form-label">Category</label>
        <InputSelect id="categoryId" @bind-Value="model.CategoryId" class="form-control">
            @foreach (var category in categories)
            {
                <option value="@category.Id">@category.Title</option>
            }
        </InputSelect>
    </div>

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }

    <button class="btn-success" type="submit">SAVE</button>


</EditForm>

@code {

    Product _model = new();
    List<Category> _categories = new();
    string? _errorMessage = null;

    protected override async Task OnInitializedAsync()
    {
        _categories = await _context
        .Categories
        .AsNoTracking()
        .ToListAsync();
    }

    private Product _model = new();
    async Task HandleSubmitAsync()
    {

    }

}